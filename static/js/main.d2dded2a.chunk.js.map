{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Header.js","components/SearchForm.js","components/Table.js","utils/API.js","components/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","fluid","children","Row","Col","size","split","map","join","Header","heading","instructions","SearchForm","onChange","handleInputChange","value","name","type","placeholder","id","Table","alt","src","phone","email","dob","API","getUsers","axios","get","Employees","state","result","filteredResult","search","order","event","typed","target","setState","updatedList","filter","Object","values","toLocaleLowerCase","indexOf","toLowerCase","then","res","data","results","catch","err","console","log","date","Date","getMonth","getDate","getFullYear","this","sortedNames","sort","a","b","nameA","first","nameB","localeCompare","sortedPhones","phoneA","phoneB","onClick","handleSortNames","handleSortPhone","employee","picture","thumbnail","concat","last","formatDate","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2dded2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Row;","import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return (\r\n    <div className={size}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Col;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{props.heading}</h1>\r\n            <p>{props.instructions}</p>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./SearchForm.css\"\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form>\r\n            <input onChange={props.handleInputChange} value={props.value} name=\"search\" type=\"text\" className=\"search-box\" placeholder=\"Employee Info\" id=\"search\"></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\nimport \"./Table.css\"\r\n\r\nfunction Table(props) {\r\n    return (\r\n        <tr className=\"table-row\">\r\n            <td>\r\n                <img alt={props.alt} className=\"img-fluid\" src={props.src} />\r\n            </td>\r\n            <td>{props.name}</td>\r\n            <td>{props.phone}</td>\r\n            <td>{props.email}</td>\r\n            <td>{props.dob}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Table;","import axios from \"axios\";\r\n\r\nconst API = {\r\n    getUsers: () => {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n}\r\n\r\nexport default API;","import React, { Component } from \"react\";\r\nimport Container from \"./Container\"\r\nimport Row from \"./Row\";\r\nimport Col from \"./Col\";\r\nimport Header from \"./Header\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport Table from \"./Table\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Employees extends Component {\r\n    state = {\r\n        result: [],\r\n        filteredResult: [],\r\n        search: \"\",\r\n        order: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getUsers().then((res) => {\r\n            this.setState({ result: res.data.results, filteredResult: res.data.results })\r\n        }).catch((err) => { console.log(err); })\r\n    }\r\n\r\n    formatDate(date) {\r\n        let dob = new Date(date);\r\n        let month = dob.getMonth() + 1;\r\n        let day = dob.getDate();\r\n        let year = dob.getFullYear();\r\n\r\n        return [month, day, year].join(\"/\");\r\n    }\r\n\r\n    handleSortNames() {\r\n        if (this.state.order) {\r\n            this.setState({ order: false })\r\n        } else {\r\n            this.setState({ order: true })\r\n        }\r\n\r\n        const compareNames = (a, b) => {\r\n            let nameA = a.name.first.toLowerCase();\r\n            let nameB = b.name.first.toLowerCase();\r\n\r\n            if (!this.state.order) {\r\n                return nameB.localeCompare(nameA)\r\n            } else {\r\n                return nameA.localeCompare(nameB)\r\n            }\r\n        }\r\n        const sortedNames = this.state.filteredResult.sort(compareNames)\r\n        this.setState({ filteredResult: sortedNames })\r\n    }\r\n\r\n    handleSortPhone() {\r\n        if (this.state.order) {\r\n            this.setState({ order: false })\r\n        } else {\r\n            this.setState({ order: true })\r\n        }\r\n\r\n        const comparePhone = (a, b) => {\r\n            let phoneA = a.phone;\r\n            let phoneB = b.phone;\r\n\r\n            if (!this.state.order) {\r\n                if (phoneA < phoneB) {\r\n                    return 1\r\n                } else {\r\n                    return -1\r\n                }\r\n            } else {\r\n                if (phoneA < phoneB) {\r\n                    return -1\r\n                } else {\r\n                    return 1\r\n                }\r\n            }\r\n        }\r\n        const sortedPhones = this.state.filteredResult.sort(comparePhone)\r\n        this.setState({ filteredResult: sortedPhones })\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const typed = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({ [name]: typed });\r\n        const updatedList = this.state.result.filter((name) => {\r\n            let fullName = Object.values(name).join(\"\").toLocaleLowerCase();\r\n            return fullName.indexOf(typed.toLowerCase()) !== -1;\r\n        })\r\n        this.setState({ filteredResult: updatedList });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Header heading=\"Employee Directory\" instructions=\"Use the search bar to filter the results, or sort the table by clicking on the table headings\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <SearchForm value={this.state.search} handleInputChange={this.handleInputChange} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <table className=\"table\">\r\n                            <tbody className=\"table-body\">\r\n                                <tr>\r\n                                    <th>Picture</th>\r\n                                    <th><button onClick={() => {\r\n                                        return this.handleSortNames()\r\n                                    }}>Name</button></th>\r\n                                    <th><button onClick={() => {\r\n                                        return this.handleSortPhone()\r\n                                    }}>Phone</button></th>\r\n                                    <th>Email</th>\r\n                                    <th>DOB</th>\r\n                                </tr>\r\n                                {\r\n                                    this.state.filteredResult.map((employee) => {\r\n                                        return <Table alt=\"Photo of Employee\" src={employee.picture.thumbnail} name={employee.name.first.concat(\" \", employee.name.last)} phone={employee.phone} email={employee.email} dob={this.formatDate(employee.dob.date)} />\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employees;","import React from \"react\";\nimport './App.css';\nimport Employees from \"./components/Employees\"\n\nfunction App() {\n  return (\n     <Employees />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}